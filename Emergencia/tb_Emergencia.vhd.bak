library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity tb_Emergencia is
end tb_Emergencia;

architecture behavior of tb_Emergencia is

    -- Component Declaration for the Unit Under Test (UUT)
    component Emergencia
    Port ( EMG_Start : in  STD_LOGIC;
           EMG_Reset : in  STD_LOGIC;
           EMG_SigOUT : out  STD_LOGIC);
    end component;

    -- Inputs
    signal EMG_Start : STD_LOGIC := '0';
    signal EMG_Reset : STD_LOGIC := '0';

    -- Outputs
    signal EMG_SigOUT : STD_LOGIC;

    -- Clock period definitions (if needed)
    constant clk_period : time := 10 ns;

begin

    -- Instantiate the Unit Under Test (UUT)
    uut: Emergencia Port map (
          EMG_Start => EMG_Start,
          EMG_Reset => EMG_Reset,
          EMG_SigOUT => EMG_SigOUT
        );

    -- Stimulus process
    stim_proc: process
    begin	
        -- hold reset state for 20 ns.
        EMG_Reset <= '1';
        wait for 20 ns;
        EMG_Reset <= '0';
        wait for 20 ns;
        
        -- Test sequence
        EMG_Start <= '1'; -- Set start to high
        wait for 30 ns;
        
        EMG_Start <= '0'; -- Set start to low
        wait for 30 ns;

        EMG_Reset <= '1'; -- Set reset to high to reset the output
        wait for 10 ns;
        EMG_Reset <= '0';
        wait for 20 ns;

        EMG_Start <= '1'; -- Set start to high again
        wait for 30 ns;

        -- Add more test cases as needed
        wait;
    end process;

end behavior;
